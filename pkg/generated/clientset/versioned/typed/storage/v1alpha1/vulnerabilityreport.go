// Code generated by client-gen. DO NOT EDIT.

package v1alpha1

import (
	context "context"

	storagev1alpha1 "github.com/kubewarden/sbomscanner/api/storage/v1alpha1"
	applyconfigurationstoragev1alpha1 "github.com/kubewarden/sbomscanner/pkg/generated/applyconfiguration/storage/v1alpha1"
	scheme "github.com/kubewarden/sbomscanner/pkg/generated/clientset/versioned/scheme"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
)

// VulnerabilityReportsGetter has a method to return a VulnerabilityReportInterface.
// A group's client should implement this interface.
type VulnerabilityReportsGetter interface {
	VulnerabilityReports(namespace string) VulnerabilityReportInterface
}

// VulnerabilityReportInterface has methods to work with VulnerabilityReport resources.
type VulnerabilityReportInterface interface {
	Create(ctx context.Context, vulnerabilityReport *storagev1alpha1.VulnerabilityReport, opts v1.CreateOptions) (*storagev1alpha1.VulnerabilityReport, error)
	Update(ctx context.Context, vulnerabilityReport *storagev1alpha1.VulnerabilityReport, opts v1.UpdateOptions) (*storagev1alpha1.VulnerabilityReport, error)
	Delete(ctx context.Context, name string, opts v1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts v1.DeleteOptions, listOpts v1.ListOptions) error
	Get(ctx context.Context, name string, opts v1.GetOptions) (*storagev1alpha1.VulnerabilityReport, error)
	List(ctx context.Context, opts v1.ListOptions) (*storagev1alpha1.VulnerabilityReportList, error)
	Watch(ctx context.Context, opts v1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts v1.PatchOptions, subresources ...string) (result *storagev1alpha1.VulnerabilityReport, err error)
	Apply(ctx context.Context, vulnerabilityReport *applyconfigurationstoragev1alpha1.VulnerabilityReportApplyConfiguration, opts v1.ApplyOptions) (result *storagev1alpha1.VulnerabilityReport, err error)
	VulnerabilityReportExpansion
}

// vulnerabilityReports implements VulnerabilityReportInterface
type vulnerabilityReports struct {
	*gentype.ClientWithListAndApply[*storagev1alpha1.VulnerabilityReport, *storagev1alpha1.VulnerabilityReportList, *applyconfigurationstoragev1alpha1.VulnerabilityReportApplyConfiguration]
}

// newVulnerabilityReports returns a VulnerabilityReports
func newVulnerabilityReports(c *StorageV1alpha1Client, namespace string) *vulnerabilityReports {
	return &vulnerabilityReports{
		gentype.NewClientWithListAndApply[*storagev1alpha1.VulnerabilityReport, *storagev1alpha1.VulnerabilityReportList, *applyconfigurationstoragev1alpha1.VulnerabilityReportApplyConfiguration](
			"vulnerabilityreports",
			c.RESTClient(),
			scheme.ParameterCodec,
			namespace,
			func() *storagev1alpha1.VulnerabilityReport { return &storagev1alpha1.VulnerabilityReport{} },
			func() *storagev1alpha1.VulnerabilityReportList { return &storagev1alpha1.VulnerabilityReportList{} },
		),
	}
}
