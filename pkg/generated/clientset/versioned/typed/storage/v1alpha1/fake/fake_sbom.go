// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1alpha1 "github.com/kubewarden/sbomscanner/api/storage/v1alpha1"
	storagev1alpha1 "github.com/kubewarden/sbomscanner/pkg/generated/applyconfiguration/storage/v1alpha1"
	typedstoragev1alpha1 "github.com/kubewarden/sbomscanner/pkg/generated/clientset/versioned/typed/storage/v1alpha1"
	gentype "k8s.io/client-go/gentype"
)

// fakeSBOMs implements SBOMInterface
type fakeSBOMs struct {
	*gentype.FakeClientWithListAndApply[*v1alpha1.SBOM, *v1alpha1.SBOMList, *storagev1alpha1.SBOMApplyConfiguration]
	Fake *FakeStorageV1alpha1
}

func newFakeSBOMs(fake *FakeStorageV1alpha1, namespace string) typedstoragev1alpha1.SBOMInterface {
	return &fakeSBOMs{
		gentype.NewFakeClientWithListAndApply[*v1alpha1.SBOM, *v1alpha1.SBOMList, *storagev1alpha1.SBOMApplyConfiguration](
			fake.Fake,
			namespace,
			v1alpha1.SchemeGroupVersion.WithResource("sboms"),
			v1alpha1.SchemeGroupVersion.WithKind("SBOM"),
			func() *v1alpha1.SBOM { return &v1alpha1.SBOM{} },
			func() *v1alpha1.SBOMList { return &v1alpha1.SBOMList{} },
			func(dst, src *v1alpha1.SBOMList) { dst.ListMeta = src.ListMeta },
			func(list *v1alpha1.SBOMList) []*v1alpha1.SBOM { return gentype.ToPointerSlice(list.Items) },
			func(list *v1alpha1.SBOMList, items []*v1alpha1.SBOM) { list.Items = gentype.FromPointerSlice(items) },
		),
		fake,
	}
}
