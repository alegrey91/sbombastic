// Code generated by client-gen. DO NOT EDIT.

package v1alpha1

import (
	context "context"

	storagev1alpha1 "github.com/rancher/sbombastic/api/storage/v1alpha1"
	applyconfigurationstoragev1alpha1 "github.com/rancher/sbombastic/pkg/generated/applyconfiguration/storage/v1alpha1"
	scheme "github.com/rancher/sbombastic/pkg/generated/clientset/versioned/scheme"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
)

// ImagesGetter has a method to return a ImageInterface.
// A group's client should implement this interface.
type ImagesGetter interface {
	Images(namespace string) ImageInterface
}

// ImageInterface has methods to work with Image resources.
type ImageInterface interface {
	Create(ctx context.Context, image *storagev1alpha1.Image, opts v1.CreateOptions) (*storagev1alpha1.Image, error)
	Update(ctx context.Context, image *storagev1alpha1.Image, opts v1.UpdateOptions) (*storagev1alpha1.Image, error)
	// Add a +genclient:noStatus comment above the type to avoid generating UpdateStatus().
	UpdateStatus(ctx context.Context, image *storagev1alpha1.Image, opts v1.UpdateOptions) (*storagev1alpha1.Image, error)
	Delete(ctx context.Context, name string, opts v1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts v1.DeleteOptions, listOpts v1.ListOptions) error
	Get(ctx context.Context, name string, opts v1.GetOptions) (*storagev1alpha1.Image, error)
	List(ctx context.Context, opts v1.ListOptions) (*storagev1alpha1.ImageList, error)
	Watch(ctx context.Context, opts v1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts v1.PatchOptions, subresources ...string) (result *storagev1alpha1.Image, err error)
	Apply(ctx context.Context, image *applyconfigurationstoragev1alpha1.ImageApplyConfiguration, opts v1.ApplyOptions) (result *storagev1alpha1.Image, err error)
	// Add a +genclient:noStatus comment above the type to avoid generating ApplyStatus().
	ApplyStatus(ctx context.Context, image *applyconfigurationstoragev1alpha1.ImageApplyConfiguration, opts v1.ApplyOptions) (result *storagev1alpha1.Image, err error)
	ImageExpansion
}

// images implements ImageInterface
type images struct {
	*gentype.ClientWithListAndApply[*storagev1alpha1.Image, *storagev1alpha1.ImageList, *applyconfigurationstoragev1alpha1.ImageApplyConfiguration]
}

// newImages returns a Images
func newImages(c *StorageV1alpha1Client, namespace string) *images {
	return &images{
		gentype.NewClientWithListAndApply[*storagev1alpha1.Image, *storagev1alpha1.ImageList, *applyconfigurationstoragev1alpha1.ImageApplyConfiguration](
			"images",
			c.RESTClient(),
			scheme.ParameterCodec,
			namespace,
			func() *storagev1alpha1.Image { return &storagev1alpha1.Image{} },
			func() *storagev1alpha1.ImageList { return &storagev1alpha1.ImageList{} },
		),
	}
}
