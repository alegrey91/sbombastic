// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// VEXStatusApplyConfiguration represents a declarative configuration of the VEXStatus type for use
// with apply.
type VEXStatusApplyConfiguration struct {
	Repository *string `json:"repository,omitempty"`
	Status     *string `json:"status,omitempty"`
	Statement  *string `json:"statement,omitempty"`
}

// VEXStatusApplyConfiguration constructs a declarative configuration of the VEXStatus type for use with
// apply.
func VEXStatus() *VEXStatusApplyConfiguration {
	return &VEXStatusApplyConfiguration{}
}

// WithRepository sets the Repository field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Repository field is set to the value of the last call.
func (b *VEXStatusApplyConfiguration) WithRepository(value string) *VEXStatusApplyConfiguration {
	b.Repository = &value
	return b
}

// WithStatus sets the Status field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Status field is set to the value of the last call.
func (b *VEXStatusApplyConfiguration) WithStatus(value string) *VEXStatusApplyConfiguration {
	b.Status = &value
	return b
}

// WithStatement sets the Statement field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Statement field is set to the value of the last call.
func (b *VEXStatusApplyConfiguration) WithStatement(value string) *VEXStatusApplyConfiguration {
	b.Statement = &value
	return b
}
