// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// ReportApplyConfiguration represents a declarative configuration of the Report type for use
// with apply.
type ReportApplyConfiguration struct {
	Summary *SummaryApplyConfiguration `json:"summary,omitempty"`
	Results []ResultApplyConfiguration `json:"results,omitempty"`
}

// ReportApplyConfiguration constructs a declarative configuration of the Report type for use with
// apply.
func Report() *ReportApplyConfiguration {
	return &ReportApplyConfiguration{}
}

// WithSummary sets the Summary field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Summary field is set to the value of the last call.
func (b *ReportApplyConfiguration) WithSummary(value *SummaryApplyConfiguration) *ReportApplyConfiguration {
	b.Summary = value
	return b
}

// WithResults adds the given value to the Results field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Results field.
func (b *ReportApplyConfiguration) WithResults(values ...*ResultApplyConfiguration) *ReportApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithResults")
		}
		b.Results = append(b.Results, *values[i])
	}
	return b
}
