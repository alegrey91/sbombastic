name: Build, Sign, and Generate SBOM, Attestation & Provenance

on:
  workflow_call:
    inputs:
      version:
        type: string

  push:
    branches:
      - "main"
jobs:
  build:
    strategy:
      matrix:
        component: [controller, worker, storage]
        arch: [amd64, arm64]
        include:
          - arch: amd64
            runner: ubuntu-latest
            platform: linux/amd64
          - arch: arm64
            runner: ubuntu-24.04-arm
            platform: linux/arm64
    permissions:
      packages: write
      id-token: write # to mint the OIDC token for Sigstore signatures
    runs-on: ${{ matrix.runner }}
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Install cosign
        uses: sigstore/cosign-installer@3454372f43399081ed03b604cb2d021dabca52bb # v3.8.2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5.7.0
        with:
          images: ghcr.io/${{ github.repository_owner }}/sbombastic/${{ matrix.component }}
      - name: Build and push ${{ matrix.component }} for ${{ matrix.arch }}
        id: build-image
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: .
          file: ./Dockerfile.${{ matrix.component }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: ${{ matrix.platform }}
          push: true
          sbom: true
          provenance: mode=max
          tags: ghcr.io/${{ github.repository_owner }}/sbombastic/${{ matrix.component }}
          outputs: |
            type=image,push=true,push-by-digest=true,name-canonical=true
      - name: Export digest
        run: |
          mkdir -p ${{ runner.temp }}/digests
          digest="${{ steps.build-image.outputs.digest }}"
          echo "${digest}" > "${{ runner.temp }}/digests/${{ matrix.component }}-${{ matrix.arch }}.txt"

      - name: Upload digest
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: digest-${{ matrix.component }}-${{ matrix.arch }}
          path: ${{ runner.temp }}/digests/*.txt
          retention-days: 1
  merge:
    runs-on: ubuntu-latest
    needs: [build]
    strategy:
      matrix:
        component: [controller, worker, storage]
    steps:
      - name: Download all digests
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          path: ${{ runner.temp }}/digests
          pattern: digest-${{ matrix.component }}-*
          merge-multiple: true

      - name: Login to GHCR
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Retrieve tag name (main)
        if: ${{ startsWith(github.ref, 'refs/heads/main') }}
        run: |
          echo TAG_NAME=latest >> $GITHUB_ENV

      - name: Retrieve tag name (release)
        if: ${{ !startsWith(github.ref, 'refs/heads/main') }}
        run: |
          echo TAG_NAME=${{ inputs.version }} >> $GITHUB_ENV

      - name: Create and push multi-arch manifest for ${{ matrix.component }}
        id: create-manifest
        working-directory: ${{ runner.temp }}/digests
        run: |
          amd64_digest=$(cat ${{ matrix.component }}-amd64.txt)
          arm64_digest=$(cat ${{ matrix.component }}-arm64.txt)

          docker buildx imagetools create \
            -t ghcr.io/${{ github.repository_owner }}/sbombastic/${{ matrix.component }}:${{ env.TAG_NAME }} \
            ghcr.io/${{ github.repository_owner }}/sbombastic/${{ matrix.component }}@${amd64_digest} \
            ghcr.io/${{ github.repository_owner }}/sbombastic/${{ matrix.component }}@${arm64_digest}

          docker buildx imagetools inspect ghcr.io/${{ github.repository_owner }}/sbombastic/${{ matrix.component }}:${{ env.TAG_NAME }}

  attest:
    needs: [merge]
    if: ${{ inputs.version }}
    uses: ./.github/workflows/attestation.yml
    strategy:
      matrix:
        component: [controller, worker, storage]
        arch: [amd64, arm64]
        include:
          - arch: amd64
            runner: ubuntu-latest
            platform: linux/amd64
          - arch: arm64
            runner: ubuntu-24.04-arm
            platform: linux/arm64
    with:
      component: ${{ matrix.component }}
      arch: ${{ matrix.arch }}